<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_charmenu_back</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init shadow casting
//vertex_format_begin();
//vertex_format_add_position();
//vertex_format_add_color();
//VertexFormat = vertex_format_end();
//VBuffer = vertex_create_buffer();
//LightPosRadius = shader_get_uniform(shader_shadows,"u_fLightPositionRadius");

//my_surface = -1;
indoor_light = true;
radius = 250;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if surface_exists(my_surface) == false {
    my_surface = surface_create(radius*2,radius*2);

    surface_set_target(my_surface);
        draw_clear_alpha(c_black,1);
        
        draw_set_blend_mode(bm_normal);
        draw_circle_colour(radius,radius,radius,image_blend,c_black,false);
        
        draw_set_blend_mode(bm_normal);
        scr_castshadows_main( x, y, radius, x-radius, y-radius, 0, +8);
        
        draw_set_blend_mode(bm_normal);
    surface_reset_target();
}*/
//if indoor_light == global.player_indoors {
//    draw_self();
//    draw_circle(x,y,radius,true);
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
