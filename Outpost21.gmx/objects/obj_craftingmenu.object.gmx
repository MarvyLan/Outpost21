<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chargen_menus</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>obj_contextmenu</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>my_entity = -1; //set by mouse on create
context_menu_width = 0;
menu_is_inventory = true;

alarm[0] = 10;

//context menu
context_menu[0,0] = "Text";
context_menu[0,1] = -1;
context_menu[0,2] = true; //locked

//automatically put it on top
scr_inventory_object_depthsetting();

var my_id = id;
with obj_contextmenu {
    if my_id != id instance_destroy(); //only one at a time!
}

//clean
global.inventory_drag_entity = -1;
global.inventory_drag_entity_object = -1;
global.inventory_drag_objid = noone;

//gui location
gui_size = 16; //tile size
guix = 0; //the mouse sets this on create of the context menu!
guiy = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lock until ready</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if menu_is_inventory == false {
    if instance_exists(obj_player) and point_distance(x,y,obj_player.x,obj_player.y) &lt; global.place_grab_range {
        //allow me   
    }
    else
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///construct context menu

var arraysize = array_height_2d(context_menu);
for (var i=0; i&lt;arraysize; i+=1) {
    show_debug_message("Context menu width check: " + string(context_menu[i,0]))
    if is_undefined(context_menu[i,0]) context_menu[i,0] = "&lt;!!UNDEFINED NAME!!&gt;";
    context_menu_width = max( context_menu_width, ceil( string_width(context_menu[i,0])/gui_size));
}

//align based on location on screen
if guix &gt; 576/2 guix -= context_menu_width;
if guiy &gt; 324/2 guiy -= arraysize*gui_size; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw_gui on screen!
if my_entity != -1 {
    var mouse_guix = device_mouse_x_to_gui(0);
    var mouse_guiy = device_mouse_y_to_gui(0);
    
    //draw loop
    var arraysize = array_height_2d(context_menu);
    if arraysize &gt; 0 {
        for (var i=0; i&lt;arraysize; i+=1)
        {
            //draw alignment and such
            var drawx = guix;
            var drawy = guiy + (i*gui_size);
            
            //left side   
            draw_sprite_part(spr_securitymenu_template,0,0,gui_size,gui_size,gui_size,drawx-gui_size,drawy); //draw left side
            
            if i == 0 draw_sprite_part(spr_securitymenu_template,0,0,0,gui_size,gui_size,drawx-gui_size,drawy-gui_size); //draw left side, top of menu
            if i == arraysize-1 draw_sprite_part(spr_securitymenu_template,0,0,gui_size*2,gui_size,gui_size,drawx-gui_size,drawy+gui_size); //draw left side, bottom of menu
        
            //detect if mouse is one of the selections
            var inselection = false
            if point_in_rectangle(mouse_guix,mouse_guiy,guix,guiy+(i*gui_size),guix+(context_menu_width*gui_size),guiy+(i*gui_size)+(gui_size)-1) inselection = true;
            
            if context_menu[i,2] == false {
                //activate menu or disable selection
                if device_mouse_check_button_pressed(0,mb_left) and alarm[0] &lt;= 0 {
                    if inselection == true {
                        //select this securit thing
                        inselection = 2; //boop sprite
                        
                        //transmit crafting selection to server
                        scr_spacket_entity_interact( my_entity, id, i);
                        
                        //no need to stay around
                        instance_destroy(); 
                    }
                    else if point_in_rectangle(mouse_guix,mouse_guiy,guix-3,guiy-3,guix+(context_menu_width*gui_size)+3,guiy+(arraysize*gui_size)+3) == false {
                        instance_destroy(); //cancel context
                    }
                }
            
                //draw mid section
                draw_sprite_part_ext(spr_securitymenu_template,inselection,gui_size,gui_size,gui_size,gui_size,drawx,drawy,context_menu_width,1,image_blend,image_alpha); //draw middle
                if i == 0 draw_sprite_part_ext(spr_securitymenu_template,0,gui_size,0,gui_size,gui_size,drawx,drawy-gui_size,context_menu_width,1,image_blend,image_alpha); //draw middle, top of menu
                if i == arraysize-1 draw_sprite_part_ext(spr_securitymenu_template,0,gui_size,gui_size*2,gui_size,gui_size,drawx,drawy+gui_size,context_menu_width,1,image_blend,image_alpha); //draw middle, bottom of menu
                
                //draw text
                draw_text(drawx,drawy,context_menu[i,0]);
            }
            else
            {
                draw_sprite_part_ext(spr_securitymenu_template,3,gui_size,gui_size,gui_size,gui_size,drawx,drawy,context_menu_width,1,image_blend,image_alpha); //draw middle
                if i == 0 draw_sprite_part_ext(spr_securitymenu_template,0,gui_size,0,gui_size,gui_size,drawx,drawy-gui_size,context_menu_width,1,image_blend,image_alpha); //draw middle, top of menu
                if i == arraysize-1 draw_sprite_part_ext(spr_securitymenu_template,0,gui_size,gui_size*2,gui_size,gui_size,drawx,drawy+gui_size,context_menu_width,1,image_blend,image_alpha); //draw middle, bottom of menu
            
                if device_mouse_check_button_pressed(0,mb_left) and alarm[0] &lt;= 0 {
                    if point_in_rectangle(mouse_guix,mouse_guiy,guix-3,guiy-3,guix+(context_menu_width*gui_size)+3,guiy+(arraysize*gui_size)+3) == false {
                        instance_destroy(); //cancel context
                    }
                }
                
                //draw text
                draw_text(drawx,drawy,context_menu[i,0]);
            }
            
            //right side,
            draw_sprite_part(spr_securitymenu_template,0,gui_size*2,gui_size,gui_size,gui_size,drawx+(context_menu_width*gui_size),drawy); //draw right side
            if i == 0 draw_sprite_part(spr_securitymenu_template,0,gui_size*2,0,gui_size,gui_size,drawx+(context_menu_width*gui_size),drawy-gui_size); //draw right side, top of menu
            if i == arraysize-1 draw_sprite_part(spr_securitymenu_template,0,gui_size*2,gui_size*2,gui_size,gui_size,drawx+(context_menu_width*gui_size),drawy+gui_size); //draw right side, bottom of menu 
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>do not draw my real body</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
