<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_selection_target</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>5</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wait till we are a few frames after to place or throw</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_set_depth(y,-8);
var snap_range = 24;
//player location
var plx = -1000; 
var ply = -1000;
with obj_hostobject {
    plx = x;
    ply = y;
}

if instance_exists(obj_location_target) == true alarm[0] = 5;

if scr_client_controllock() == false and global.construction_mode == false and global.client_loading == false {
    var nearest_inst = collision_point(mouse_x,mouse_y,obj_puppet,true,true);

    //if instance even exists...
    if alarm[0] &lt;= 0 and instance_exists(nearest_inst) and point_distance(nearest_inst.x,nearest_inst.y,plx,ply) &lt; global.place_grab_range {
        
        //mouse clicking
        if device_mouse_check_button_released(0,mb_left) and alarm[0] &lt;= 0 
        and instance_exists(obj_contextmenu) == false
        and point_distance(nearest_inst.x,nearest_inst.y,mouse_x,mouse_y) &lt; snap_range {
        
            if nearest_inst.mask_index != spr_nocol and scr_menu_overlap_check(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0)) == false { //no collision map disables clicking! 
                
                if nearest_inst.constructed == false or nearest_inst.construction_hides == false //if not constructed, or if it is and a wrench is held!
                or (nearest_inst.constructed == true and global.equiped_object == obj_puppet_wrench) {
                    //get the player's entity
                    var player_entity = -1;
                    with obj_client player_entity = my_player_entity_number;
                
                    //spawn a context menu!
                    with instance_create(x,y,obj_contextmenu) {
                        //make a menu for the object!
                        my_entity = nearest_inst.entityid;
                        my_object = nearest_inst.object_index;
                        my_instance = nearest_inst;
                        storagebox_id = instance_nearest(x,y,obj_client);
                        storagebox_entity = player_entity;
                        var mouse_guix = device_mouse_x_to_gui(0);
                        var mouse_guiy = device_mouse_y_to_gui(0);
                        guix = mouse_guix;
                        guiy = mouse_guiy;
                        
                        //this context menu is from an inventory
                        menu_is_inventory = false;
                        
                        //update context menu
                        event_user(0);
                    }
                }
                else
                {
                    show_debug_message("not constructed, construction doesn't hide, or constructed and wrench enabled were all false.");
                }
            }
            else
            {
                show_debug_message("No pickup: mask is empty, or menu overlap");
            }
        }
        
        if point_distance(mouse_x,mouse_y, nearest_inst.x, nearest_inst.y) &lt; snap_range {
            if nearest_inst.constructed == false or nearest_inst.construction_hides == false or //if not constructed, or if it is and a wrench is held!
            (nearest_inst.constructed == true and global.equiped_object == obj_puppet_wrench) {
                //zoom to nearest instance!
                image_alpha += 0.08;
                x = lerp(x,nearest_inst.x,0.15);
                y = lerp(y,nearest_inst.y,0.15);
                //set the tooltip
                if scr_menu_overlap_check(device_mouse_x_to_gui(0),device_mouse_y_to_gui(0)) == false
                    scr_tooltip_construct(nearest_inst.object_index,nearest_inst.entityid);
            }
            else
            {
                //zoom back to mouse
                x = lerp(x,mouse_x,0.15);
                y = lerp(y,mouse_y,0.15);
                image_alpha -= 0.08;
            }
        }
        else
        {
            //zoom back to mouse
            x = lerp(x,mouse_x,0.15);
            y = lerp(y,mouse_y,0.15);
            image_alpha -= 0.08;
        }
    }
    else
    {
        //zoom back to mouse
        x = lerp(x,mouse_x,0.15);
        y = lerp(y,mouse_y,0.15);
        image_alpha -= 0.20;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//get distance to
image_angle += 2;
var min_fade = 0.20;
if alarm[0] &gt; 0 min_fade = 0;
image_alpha = clamp(image_alpha,min_fade,0.90);
draw_sprite_ext(spr_selection_target,0,x,y,1,1,image_angle,image_blend,image_alpha);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
