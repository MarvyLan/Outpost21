<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//forced movements
movex = 0;
movey = 0;
forcedx = 0;
forcedy = 0;

//spawning one or changing one requests all entities update
scr_spacket_entity_request_all();

//cleanouts
var myid = id;
with obj_hostobject {
    if id != myid instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///light_radius

//get nearest light values
var nearest_light_bright = 0;
with obj_lightsource {
    if indoor_light == global.player_indoors and visible == true {
        var get_bright = 1 - (point_distance(x,y,other.x,other.y)/radius);
        if get_bright &gt; nearest_light_bright nearest_light_bright = get_bright;
    }
}

//mad edge intensity modifier
var map_limit = power((point_distance(global.map_xlimit/2,global.map_ylimit/2,x,y) / global.map_xlimit),2);

//weather modifier
var weather_mod = global.weather_severity;
var indoor_light_slider = 0.30; //if outdoor
if global.player_indoors == true {
    weather_mod = 6; //indoors are darker by this degree!!!
    indoor_light_slider = 0.70; //if outdoor
}
//get the point between the weather and the nearest light!
var perc = lerp( clamp(1 - (weather_mod/10), 0.30, 1) 
               , clamp(nearest_light_bright,0.30,1) 
               , indoor_light_slider); 


//light value assignment        
global.player_light = lerp( global.player_light
                          , (global.entity_activation_range * perc) + map_limit
                          , 0.05 );

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///console activate
if keyboard_check_pressed($C0) {
    if instance_exists(obj_console) == false {
        instance_create(0,0,obj_console);
    }
    else
    {
        with obj_console instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
