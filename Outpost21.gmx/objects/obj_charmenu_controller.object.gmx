<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_charmenu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rectangle_alpha = 0;
character_map = ds_map_create();
player_name = "";
inspect = -1;
locked = false;

planet_fadein = 0;
my_puppet = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy(character_map);
with my_puppet instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_map_destroy(character_map);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//menu draw
for (var i=0; i&lt;=ds_map_size(character_map); i+=1)
{
    if instance_exists(obj_questionbox_usechar) == false {
    
        var extract_map = character_map[? string(i)];
        if point_in_rectangle(mouse_x,mouse_y,768+2,(i*64)+2,768+190,(i*64)+62) and locked == false {
            if mouse_check_button_pressed(mb_left) {
                draw_sprite(spr_charmenu,2,768,i*64);
                if i &lt; ds_map_size(character_map) {
                    with instance_create(768+192,160,obj_questionbox_usechar) {
                        stored_name = extract_map[? "player_nickname"];
                        stored_entity = extract_map[? "entity_number"];
                        
                        my_text = "Log in as " + string(stored_name) + "?#entity: " + string(stored_entity);
                    }
                }
                else
                {
                    //make new character
                    //var get_str = get_string("New character name (including last name with a space)","");
                    //if is_string(get_str) and string_length(get_str) &gt; 0 {
                    //    scr_spacket_character_create(get_str,player_name);
                    //}
                    with instance_create(1536,0,obj_chargen_controller) {
                        player_name = other.player_name; //persistant name
                    }
                }
                locked = true;
            }
            else
            {
                draw_sprite(spr_charmenu,1,768,i*64);
            }
            
            //update inspector
            if i &lt; ds_map_size(character_map) {
                inspect = i;
            }
            else
            {
                //inspect = -1;
            }
        }
        else
        {
            draw_sprite(spr_charmenu,0,768,i*64);
        }
    }
    else
    {
        draw_sprite(spr_charmenu,0,768,i*64);
    }
    
    
    if i &lt; ds_map_size(character_map) {
        var get_data = ds_map_find_value(character_map,string(i)); 
        draw_text(768+4,(i*64)+4,get_data[? "player_nickname"]);
    }
    else
    {
        draw_text(768+4,(i*64)+4,"Create new character");
    }
}



//character data draw
if inspect &gt;= 0 {
    var extract_map = character_map[? string(inspect)];
    draw_text(768+200,10,"Entity number: " + string(extract_map[? "player_nickname"]) );
    draw_text(768+200,20,"Entity number: " + string(extract_map[? "entity_number"]) );
    draw_text(768+200,30,"host object: " + string(extract_map[? "object_index"]) );
    
    //face in homeworld.
    if planet_fadein &lt; 1 planet_fadein += 0.10;
    if planet_fadein &gt; 1 planet_fadein = 1;
    draw_sprite_ext(spr_chargen_homeworld_onscreen,extract_map[? "stat_homeworld"],960,432,1,1,0,image_blend,planet_fadein);
    
    //remove old one if race changed
    with my_puppet {
        if selected_race != extract_map[? "stat_race"] instance_destroy();
    }
    
    //spawn new one
    if instance_exists( my_puppet) == false {
        my_puppet = instance_create( 1216, 192, obj_chargen_puppet);
        with my_puppet {
            selected_race = extract_map[? "stat_race"];
            scr_charactersprite_set( selected_race);
            skeleton_animation_set("Walk");
        }
    }
}


//fading shadow
if view_xview[0] != 768 {
    if rectangle_alpha &lt; 1  rectangle_alpha += 0.01;
    if rectangle_alpha &gt;= 1 {
        view_xview[0] = 768;
        with obj_chargen_controller instance_destroy();
    }
}
else
{
    if rectangle_alpha &gt; 0 rectangle_alpha -= 0.01;
}


draw_set_color(c_black);
rectangle_alpha = clamp(rectangle_alpha,0,1);
draw_set_alpha(rectangle_alpha);
draw_rectangle(view_xview[0]-1000,view_yview[0]-1000,view_xview[0]+view_wview[0]+1000,view_yview[0]+view_hview[0]+1000,false);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
